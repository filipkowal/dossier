openapi: 3.0.0
info:
  version: "1.0"
  title: Dossier
  description: ""
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/FILIPKOWAL_1/Dossier/1.0

security:
  - cookieAuth: []

components:
  securitySchemes:
    cookieAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer # just for documentation puroses
      bearerFormat: JWT
      description: "JWT stored in cookie of name: token"
  schemas:
    File:
      type: object
      properties:
        content:
          type: string
        id:
          type: string
        lastModified:
          type: integer
          format: int64
        name:
          type: string
        size:
          type: integer
          format: int64
        type:
          type: string
    RelationshipManager:
      type: object
      properties:
        name:
          type: string
          example: Christoph Kowalski
        phoneNumber:
          type: string
          example: +48 666 666 666
        photo:
          type: string
          format: url
          example: "https://www.example.com/photo.jpg"
    Candidate:
      type: object
      properties:
        firstName:
          type: string
          example: Christoph
        lastName:
          type: string
          example: Kowalski
        gender:
          type: string
          enum: ["male", "female"]
        candidateImage:
          $ref: "#/components/schemas/File"
        vacancyTitle:
          type: string
          example: Senior Consultant (CIO Advisory)
        currentPosition:
          type: string
          example: Gardener Senior Consultant @Google
        employerName:
          type: string
          example: atrete ag
        birthDate:
          type: string
          example: 01.01.1990
        candidateAge:
          type: string
          example: 30
        address:
          $ref: "#/components/schemas/Address"
        phoneNumber:
          type: string
          example: +48 666 666 666
        email:
          type: string
          example: example@example.com
        linkedIn:
          type: string
          example: linkedin.com/in/example
        desiredSalary:
          type: string
          example: 130 000 CHF
        noticePeriod:
          type: string
          example: 1 month
        reasonForChange:
          type: string
          example: Die basenet Informatik (grösster Teil der Gruppe) wurde verkauft und viele kleinere Gesellschaften konsolidiert. Er begleitet diese 'Carve-outs' der Gesellschaften, danach ist seine Rolle obsolet bzw. nicht mehr so spannend. Er hat deshalb entschieden außerhalb der Gruppe eine neue Herausforderung zu suchen. Das Dienstleistungsportfolio von atrete tönt sehr spannend und mit den. Werten von atrete kann er sich sehr gut identifizieren.
        interviewSummary:
          type: string
          example: Christoph Pfister ist seit vielen Jahren in verschiedenen Rollen im Bereich Informationstechnik unterwegs und würde sein Wissen und seine Erfahrung sehr gerne als Berater einbringen. Es reizt ihn spannende sowie komplexe Problemstellungen zu lösen und er kann dank seiner Erfahrung eine holistische Betrachtung auf Challenges einnehmen. In seiner aktuellen Rolle als CIO der PEAX AG verantwortet er die Produktentwicklung und den Betrieb einer SaaS-Plattform für digitale Services. In seiner zusätzlichen Gruppen-Rolle durfte er in der Base-Net Unternehmensgruppe verschiedene große Projekte erfolgreich umsetzen. Er ist sich gewohnt mit einer 360 Grad Sicht zu agieren und dazu die verschiedenen Sachverhalte und Themen für unterschiedliche Ziel- und Anspruchsgruppen verständlich und nachvollziehbar aufzubereiten und zu präsentieren. Als Mitglied des Enterprise Architektur Boards ist er zudem verantwortlich für die Identifikation sowie Einführung von neuen Technologien und für regulatorische und IT-rechtliche Themen.
        files:
          type: array
          items:
            $ref: "#/components/schemas/File"
        dossierPhase:
          type: string
          enum:
            - "candidateNotAssessed"
            - "candidateAccepted"
            - "interviewScheduled"
            - "candidateRejected"
        dossierMessage:
          type: string
          example: "We will inform you which date Christoph has chosen so that you can send him the meeting invite. Please make sure to CC: atrete@digitalent.ch to the meeting"
        desiredWorkload:
          type: string
          example: 100%
        educationSummary:
          type: string
          format: html
          example: "<ul>
            <li>2021 Berufsbildnerkurs</li>
            <li>2020 Dipl. Betriebswirtschafter HF</li>
            </ul>"
    User:
      type: object
      properties:
        canDownloadPdf:
          type: boolean
        canViewSalary:
          type: boolean
        isInterviewLocationInputVisible:
          description: Invitation form should show address/url input if true
          type: boolean
          example: false
        isInterviewAvailabilityInputVisible:
          description: Invitation form should show availability slots input if true
          type: boolean
        address:
          $ref: "#/components/schemas/Address"
    Address:
      type: object
      properties:
        street:
          type: string
          example: Wiener Str. 55
        city:
          type: string
          example: Bern
        zip:
          type: string
          example: 30-101
        state:
          type: string
          example: Bern
        region:
          type: string
          example: Western Part of Switzerland
        country:
          type: string
          example: Switzerland
        geoCoordinates:
          $ref: "#/components/schemas/GeoCoordinates"
    GeoCoordinate:
      pattern: ^(-?\d+(\.\d+)?)
      type: string
      example: "47.4708538"
    GeoCoordinates:
      type: object
      properties:
        latitude:
          $ref: "#/components/schemas/GeoCoordinate"
        longitude:
          $ref: "#/components/schemas/GeoCoordinate"

paths:
  /auth/sendCode:
    post:
      summary: Request a login code
      operationId: requestLoginCode
      security: [] # This endpoint doesn't require authentication
      responses:
        "200":
          description: Code sent to the user's phone and email
        "400":
          description: Bad request
  /auth/login:
    post:
      summary: Login with a code
      operationId: login
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
      responses:
        "200":
          description: Successful operation
          headers:
            Set-Cookie:
              schema:
                type: string
                example: "token={tokenvalue}; HttpOnly"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "403":
          description: Wrong code
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /auth/logout:
    post:
      summary: Logout
      operationId: logout
      security: []
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
  /{locale}/candidate/{id}:
    get:
      summary: Retrieve a candidate information
      operationId: getResource
      parameters:
        - name: locale
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Candidate"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /{locale}/candidate/{id}/pdf:
    get:
      summary: Download a candidate's dossier as a PDF
      operationId: downloadPdf
      parameters:
        - name: locale
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/File"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /{locale}/user/{id}:
    get:
      summary: Retrieve user information
      operationId: getUser
      parameters:
        - name: locale
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /{locale}/relationshipManager/{id}:
    get:
      summary: Retrieve a relationship manager information
      operationId: getRelationshipManager
      parameters:
        - name: locale
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RelationshipManager"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /candidate/{id}/invite:
    post:
      summary: Invite a candidate
      description: Locale is not specified as a candidate might use a different language than the user
      operationId: inviteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                interviewDuration:
                  description: In minutes
                  type: integer
                channel:
                  type: string
                  enum: ["online", "onsite"]
                address:
                  type: string
                url:
                  type: string
                  example: "https://meet.google.com/abc-def-ghi"
                availibilitySlots:
                  type: array
                  items:
                    type: object
                    properties:
                      startDateTime:
                        type: string
                        format: date-time
                      endTime:
                        type: string
                        format: time
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: Thank you for providing the time slots. We will check with the candidate to find the best suitable time and inform you soon.
        "400":
          description: Error

  /candidate/{id}/reject:
    post:
      summary: Reject a candidate
      description: Locale is not specified as a candidate might use a different language than the user
      operationId: rejectUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  enum:
                    - "notEnoughExperience"
                    - "notEnoughSkills"
                    - "notEnoughEducation"
                    - "notEnoughSalary"
                    - "notEnoughLanguageSkills"
                    - "notEnoughSoftSkills"
                    - "notEnoughHardSkills"
                    - "notEnoughDomainKnowledge"
                    - "notEnoughAvailability"
                    - "notEnoughMotivation"
                    - "notEnoughCulturalFit"
                    - "notEnoughPersonality"
                    - "notEnoughTeamFit"
                    - "notEnoughOther"
                message:
                  type: string
                  example: "We are sorry to inform you that we will not proceed with candidate's application. We wish you all the best and can't wait for future candidates."
      responses:
        "200":
          description: Success
        "400":
          description: Error

  /contact/{id}:
    post:
      summary: Send a message to DT to enquire about the candidacy
      operationId: contactDT
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "We are sorry to inform you that we will not proceed with candidate's application. We wish you all the best and can't wait for future candidates."
      responses:
        "200":
          description: Success
        "400":
          description: Error
