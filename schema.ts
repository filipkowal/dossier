/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/candidateIds": {
    /** Retrieve a list of candidate IDs */
    get: operations["getCandidateIds"];
  };
  "/{locale}/candidate/{id}": {
    /** Retrieve a candidate information */
    get: operations["getResource"];
  };
  "/{locale}/user/{id}": {
    /** Retrieve user information */
    get: operations["getUser"];
  };
  "/invite/{id}": {
    /**
     * Invite a candidate
     * @description Locale is not specified as a candidate might use a different language than the user
     */
    post: operations["inviteUser"];
  };
  "/reject/{id}": {
    /**
     * Reject a candidate
     * @description Locale is not specified as a candidate might use a different language than the user
     */
    post: operations["rejectUser"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Candidate: {
      /** @example Christoph */
      firstName?: string;
      /** @example Kowalski */
      lastName?: string;
      /** @example Senior Consultant (CIO Advisory) */
      jobTitle?: string;
      /** @example atrete ag */
      employerName?: string;
      /** @example 01.01.1990 */
      birthDate?: string;
      address?: components["schemas"]["Address"];
      /** @example +48 666 666 666 */
      phoneNumber?: string;
      /** @example example@example.com */
      email?: string;
      /** @example linkedin.com/in/example */
      linkedIn?: string;
      /**
       * @example [
       *   "Polish - native",
       *   "English - fluent",
       *   "German - basic"
       * ]
       */
      languages?: string[];
      /** @example 5km */
      distanceToWork?: string;
      /** @example 130 000 CHF */
      desiredSalary?: string;
      /** @example 100 000 CHF */
      targetSalary?: string;
      /** @example 1 month */
      noticePeriod?: string;
      /** @example Die basenet Informatik (grösster Teil der Gruppe) wurde verkauft und viele kleinere Gesellschaften konsolidiert. Er begleitet diese 'Carve-outs' der Gesellschaften, danach ist seine Rolle obsolet bzw. nicht mehr so spannend. Er hat deshalb entschieden außerhalb der Gruppe eine neue Herausforderung zu suchen. Das Dienstleistungsportfolio von atrete tönt sehr spannend und mit den. Werten von atrete kann er sich sehr gut identifizieren. */
      reasonForChange?: string;
      /** @example Christoph Pfister ist seit vielen Jahren in verschiedenen Rollen im Bereich Informationstechnik unterwegs und würde sein Wissen und seine Erfahrung sehr gerne als Berater einbringen. Es reizt ihn spannende sowie komplexe Problemstellungen zu lösen und er kann dank seiner Erfahrung eine holistische Betrachtung auf Challenges einnehmen. In seiner aktuellen Rolle als CIO der PEAX AG verantwortet er die Produktentwicklung und den Betrieb einer SaaS-Plattform für digitale Services. In seiner zusätzlichen Gruppen-Rolle durfte er in der Base-Net Unternehmensgruppe verschiedene große Projekte erfolgreich umsetzen. Er ist sich gewohnt mit einer 360 Grad Sicht zu agieren und dazu die verschiedenen Sachverhalte und Themen für unterschiedliche Ziel- und Anspruchsgruppen verständlich und nachvollziehbar aufzubereiten und zu präsentieren. Als Mitglied des Enterprise Architektur Boards ist er zudem verantwortlich für die Identifikation sowie Einführung von neuen Technologien und für regulatorische und IT-rechtliche Themen. */
      interviewSummary?: string;
      /** @example A1, B1 */
      driversLicence?: string;
      files?: string[];
      /** @enum {string} */
      dossierPhase?: "" | "candidateAccepted" | "intervieScheduled" | "candidateRejected";
      /** @example We will inform you which date Christoph has chosen so that you can send him the meeting invite. Please make sure to CC: atrete@digitalent.ch to the meeting */
      dossierMessage?: string;
      /** @example 100% */
      desiredWorkload?: string;
      /** @example The candidate is a very experienced IT professional with a strong background in software development and architecture. He has been working in the financial industry for many years and has a deep understanding of the business processes and challenges in this industry. He is a very good communicator and has a strong customer focus. He is a team player and has a strong focus on quality and security. He is a very good communicator and has a strong customer focus. He is a team player and has a strong focus on quality and security. He is a very good communicator and has a strong customer focus. He is a team player and has a strong focus on quality and security. He is a very good communicator and has a strong customer focus. He is a team player and has a strong focus on quality and security. He is a very good communicator and has a strong customer focus. He is a team player and has a strong focus on quality and security. */
      educationSummary?: string;
    };
    User: {
      canDownloadPdf?: boolean;
      canViewSalary?: boolean;
      /** @description False means User Case 3 */
      isSettingAvailibility?: boolean;
      /**
       * @description True means User Case 2
       * @example false
       */
      isInviting?: boolean;
      address?: components["schemas"]["Address"];
    };
    Address: {
      /** @example Wiener Str. 55 */
      street?: string;
      /** @example Bern */
      city?: string;
      /** @example Bern */
      state?: string;
      /** @example Western Part of Switzerland */
      region?: string;
      /** @example Switzerland */
      country?: string;
      geoCoordinates?: components["schemas"]["GeoCoordinates"];
    };
    /** @example 47.4708538 */
    GeoCoordinate: string;
    GeoCoordinates: {
      latitude?: components["schemas"]["GeoCoordinate"];
      longitude?: components["schemas"]["GeoCoordinate"];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Retrieve a list of candidate IDs */
  getCandidateIds: {
    responses: {
      /** @description Successful operation */
      200: {
        content: {
          "application/json": string[];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": {
            error?: string;
          };
        };
      };
    };
  };
  /** Retrieve a candidate information */
  getResource: {
    parameters: {
      path: {
        locale: string;
        id: string;
      };
    };
    responses: {
      /** @description Successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["Candidate"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": {
            error?: string;
          };
        };
      };
    };
  };
  /** Retrieve user information */
  getUser: {
    parameters: {
      path: {
        locale: string;
        id: string;
      };
    };
    responses: {
      /** @description Successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": {
            error?: string;
          };
        };
      };
    };
  };
  /**
   * Invite a candidate
   * @description Locale is not specified as a candidate might use a different language than the user
   */
  inviteUser: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description In minutes */
          interviewDuration?: number;
          channel?: string;
          address?: string;
          availibilitySlots?: {
              /** Format: date-time */
              startTime?: string;
              /** Format: date-time */
              endTime?: string;
            }[];
        };
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: never;
      };
      /** @description Error */
      400: {
        content: never;
      };
    };
  };
  /**
   * Reject a candidate
   * @description Locale is not specified as a candidate might use a different language than the user
   */
  rejectUser: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @enum {string} */
          reason?: "notEnoughExperience" | "notEnoughSkills" | "notEnoughEducation" | "notEnoughSalary" | "notEnoughLanguageSkills" | "notEnoughSoftSkills" | "notEnoughHardSkills" | "notEnoughDomainKnowledge" | "notEnoughAvailability" | "notEnoughMotivation" | "notEnoughCulturalFit" | "notEnoughPersonality" | "notEnoughTeamFit" | "notEnoughOther";
          /** @example We are sorry to inform you that we will not proceed with candidate's application. We wish you all the best and can't wait for future candidates. */
          message?: string;
        };
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: never;
      };
      /** @description Error */
      400: {
        content: never;
      };
    };
  };
}
